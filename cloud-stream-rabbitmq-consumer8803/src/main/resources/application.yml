server:
  port: 8803
spring:
  application:
    name: cloud-provide-stream
  profiles:
    active: default
  cloud:
    stream:
      binders:  #配置rabbitmq的服务信息
        defaultRabbit: #表示定义的名称，用于binding的整合
          type: rabbit   #消息组件类型
          environment:  #相关环境配置
            spring:
              rabbitmq:
                host: localhost
                port: 5672
                username: guest
                password: guest
      bindings:    #服务整合处理
        input:
          destination: packetUplinkTopics   #表示要使用的exchenge名称定义
          content-type: application/json   #设置消息类型，本次为json,文本则为设置"text/plain"
          binder: defaultRabbit   #要绑定的消息服务的具体设置
          group: ${spring.application.name}     #分组，同一个组呢消息只会被消费一次，不同组内消息会被重复消费，分组了，消息会持久化，未分组消息不会持久化
        packetUplinkInput:
          destination: packetUplinkTopic
          content-type: application/json
          group: ${spring.application.name}
          binder: rabbit
          consumer:
            maxAttempts: 3 # 当消息消费失败时，尝试消费该消息的最大次数（消息消费失败后，发布者会重新投递）。默认3
            backOffInitialInterval: 1000 # 消息消费失败后重试消费消息的初始化间隔时间。默认1s，即第一次重试消费会在1s后进行
            backOffMultiplier: 2 # 相邻两次重试之间的间隔时间的倍数。默认2，即第二次是第一次间隔时间的2倍，第三次是第二次的2倍
            backOffMaxInterval: 10000 # 下一次尝试重试的最大时间间隔，默认为10000ms，即10s。
eureka:
  client:
    register-with-eureka: true
    fetch-registry: false
    service-url:
      # defaultZone: http://localhost:7001/eureka
      # 集群版
      defaultZone: http://eureka7002:7002/eureka,http://eureka7003:7003/eureka
  instance:
    instance-id: cloud-provide-stream-8803
    # 访问路径可以显示ip地址
    prefer-ip-address: true
    lease-expiration-duration-in-seconds: 30   #设置默认时间间隔
    lease-renewal-interval-in-seconds: 90  #超过时间间隔作启动服务保护